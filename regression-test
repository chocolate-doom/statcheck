#!/usr/bin/env python

import os
import sys
from common import *
from config import *

GREEN = '\033[92m'
RED = '\033[91m'
COLOR_END = '\033[0m'

OUTPUT_FILENAME = "out.txt"

def read_file(filename):
	result = []

	stream = open(filename)
	lines = stream.readlines()
	stream.close()

	lines = map(lambda x: x.strip(), lines)

	return "\n".join(lines)

def check_output(zipfile_path, lmpname):
	expected_file = os.path.join("output", zipfile_path,
	                             lmpname.lower().replace(".lmp", ".txt"))

	output = read_file(OUTPUT_FILENAME)
	expected = read_file(expected_file)

	if output != expected:
		os.system("diff -u %s %s" % (expected_file, OUTPUT_FILENAME))

	return output == expected

def print_result(zipfile_path, lmpname, success):

	if success:
		success_string = GREEN + " OK " + COLOR_END
	else:
		success_string = RED + "FAIL" + COLOR_END

	print "%-50s%-15s%s" % (zipfile_path, lmpname, success_string)

# Run the specified demo and check the output is correct.

def process_lmp(gametype, zipfile_path, zf, lmpname):

	gamepath, exe = GAME_PATHS[gametype]
	iwad = os.path.join(gamepath, "%s.wad" % gametype)

	try:
		zf.extract(lmpname)

		if os.path.exists(OUTPUT_FILENAME):
			os.remove(OUTPUT_FILENAME)

		cmd = "%s %s" % (PORT_EXE, PORT_OPTIONS)
		cmd += " -iwad %s" % iwad
		cmd += " -timedemo %s" % lmpname
		cmd += " -statdump %s" % OUTPUT_FILENAME

		#print cmd
		os.system(cmd + ">/dev/null 2>/dev/null")

		relpath = os.path.relpath(zipfile_path, COMPETN_PATH)

		success = check_output(relpath, lmpname)

		print_result(relpath, lmpname, success)
	finally:
		if os.path.exists(lmpname):
			os.remove(lmpname)
		if os.path.exists(OUTPUT_FILENAME):
			os.remove(OUTPUT_FILENAME)

process_all_zips(COMPETN_PATH, process_lmp)

