#!/usr/bin/env python
#
# Copyright(C) 2011 Simon Howard
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
# 02111-1307, USA.
#

# Vanilla Doom processing script.
#
# This script automatically goes through all the zip files in the
# Compet-N tree, extracts them, and then launches Doom running inside
# DOSbox to play back the demo. The game is run through statdump.exe
# and the output recorded to a file. The file is then stored in the
# output/ tree for future reference.

import shutil
import os
from config import *
from common import *

def write_batch_file(path, exe, lmpname, pwad):

	# Cut off .lmp:
	parts = lmpname.split(".")
	lmpname = parts[0]

	if pwad is None:
		pwadparm = ""
	else:
		pwadparm = "-file %s" % pwad

	filename = os.path.join(path, "tmp.bat")

	f = open(filename, 'w')
	f.write("stuffbuf !\n")
	f.write("statdump.exe -o out.txt %s %s -nosound -nodraw -timedemo %s\n"
	        % (exe, pwadparm, lmpname))
	f.close()

	return filename

def make_parent_dirs(path):
	if path != "" and not os.path.exists(path):
		make_parent_dirs(os.path.dirname(path))
		os.mkdir(path)

def save_stats(zipfile_path, lmpname, stats_output):

	filename = lmpname.lower().replace(".lmp", ".txt")

	relpath = os.path.relpath(zipfile_path, COMPETN_PATH)
	savepath = os.path.join("output", relpath, filename)

	make_parent_dirs(os.path.dirname(savepath))
	shutil.copy(stats_output, savepath)

def process_lmp(gametype, zipfile_path, zf, lmpname, pwad):

	gamepath, exe = GAME_PATHS[gametype]
	bat_file = write_batch_file(gamepath, exe, lmpname, pwad)
	stats_output = os.path.join(gamepath, "OUT.TXT")

	try:
		zf.extract(lmpname, gamepath)

		os.system("%s -exit %s" % (DOSBOX, bat_file))

		save_stats(zipfile_path, lmpname, stats_output)
	finally:
		os.remove(os.path.join(gamepath, lmpname))
		os.remove(bat_file)
		os.remove(stats_output)

process_all_zips(COMPETN_PATH, process_lmp)

